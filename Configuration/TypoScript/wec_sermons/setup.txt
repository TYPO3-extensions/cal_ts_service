plugin.tx_cal_controller {
	display {
		wec_sermons {
			# @description	This is the heart of the connection SQL. It will be used in conjunction with 
			#				the view-where (findallWithinWhere, findAll and findWhere) to retrieve the according records.
			event_select {
				selectFields = tx_wecsermons_sermons.*, 1 AS allday
			}
			
			# @description	This is the heart of the connection SQL. It will be used in conjunction with 
			#				the view-where (findallWithinWhere, findAll and findWhere) to retrieve the according records plus their categories.
			event_select_with_cat {
			}
			
			# @description	Configure the table the records come from.
			pidTable = tx_wecsermons_sermons
			
			# @description	Define the where clause for the views: day, week, month, year, list, rss
			#				Use ###START### and ###END### as marker to be replaced during runtime with the timeframe
			findAllWithinWhere = ((tx_wecsermons_sermons.occurrence_date >=###START### AND tx_wecsermons_sermons.occurrence_date+3600<=###END###) OR (tx_wecsermons_sermons.occurrence_date+3600<=###END### AND tx_wecsermons_sermons.occurrence_date+3600>=###START###) OR (tx_wecsermons_sermons.occurrence_date+3600>=###END### AND tx_wecsermons_sermons.occurrence_date<=###START###))
			
			# @description	Define the where clause for the ? view.
			#				Use ###START### and ###END### as marker to be replaced during runtime with the timeframe
			findAll =
			
			# @description	Define the where clause for the single event views: event, ics
			#				Use ###START### and ###END### as marker to be replaced during runtime with the timeframe
			findWhere = tx_wecsermons_sermons.uid = ###UID###
			
			# @description	Enable this to create a link to another page containing the single view of the external plugin.
			#				Use ###DB_FIELD### to retrieve record related informations from the database (DB_FIELD is a placeholder)
			externalPlugin = {$plugin.tx_cal_controller.display.wec_sermons.externalPlugin}
			
			externalPlugin {
				
				# @description	Define the pid for the external plugin single view
				singleViewPid = {$plugin.tx_cal_controller.display.wec_sermons.externalPlugin.singleViewPid}
				
				# @description	Array containing the url paramter to be added to the url
				additionalParams = {$plugin.tx_cal_controller.display.wec_sermons.externalPlugin.additionalParams}
			}
			
			# @description	Enables the localization and/or versioning of the result record
			enableLocalizationAndVersioning = 0

			# @description	Define the field containing the timestamp for the start time
			startTimeField = occurrence_date
			
			# @description	Define the field containing the timestamp for the end time
			endTimeField = occurrence_date
			
			# @description	If there is no end time, you can define a default length (in minutes)
			defaultLength = 0
			
			# @description	For a quick and easy integration, map your record fields to the standard event fields
			#				You can always use ###DB_FIELD### (where DB_FIELD is a placeholder for a database row entry) to insert database values  
			fieldMapping {
				title = title
				description = description
				location =
				organizer =
				image = graphic
			}
			
			# @description	The template to be used with these records
			template = EXT:cal_ts_service/Resources/Private/Templates/ts.tmpl
			
			# @description	The header style class to be used
			headerStyle = blue_catheader
			
			# @description	The body style class to be used
			bodyStyle = blue_catbody
			
			# @description	The title in the legend description for these records
			legendDescription = Sermons
			
			search {
				# @description	The fields, which are allowed to be searched through
				searchEventFieldList = tx_wecsermons_sermons.title,tx_wecsermons_sermons.description,tx_wecsermons_sermons.keywords
			}
			
			# @description	Define the SQL to retrieve the categories
			cat_select {
			}
			
			# @description	The table containing the category records
			catTable =
			
			# @description	Retrieving and adopting the event configuration for the event view.
			event {
				event < plugin.tx_cal_controller.view.event.event
				event {
					# @description	The default image path is related to the tx_cal_{object type}. Therefore the path has to be overwritten
					image >
		            image = IMAGE
		            image {
		               	file.import.field = image
		               	file.import.stdWrap.wrap = uploads/tx_wecsermons/| 
		            }
				}
			}
		}
	}
}

calRSS.10.display < plugin.tx_cal_controller.display